Name: Delete Leaves With a Given Value
Type: Algorithm
Difficulty: Medium
From: LeetCode

Description:
    Given a binary tree root and an integer target, delete all the leaf nodes with the target value.

    Note: If a node becomes a leaf node, and also have the target value, it must also be deleted.

Assumptions:
    - There will always be a root.

Example:
    Input: root = [1,3,3,3,2], target = 3
    Output: [1,3,null,null,2]

    Input: root = [1,2,3,2,null,2,4], target = 2
    OUtput: [1,null,3,null,4]


Solution Explanation:
    Solution, O(n):
        The approach used involves the use of a post-order traversal, in which we delete the target nodes in the left and right sub-branches
        then move to the main branch. Recurisvely traversing allows for the deletion of lower branches first, meaning that upper branches can be deleted
        without needing extra loops to detect.

        Algorithm Pseudocode:
            Solution {
                if (!root)
                    return null
                
                // Postorder traversal call.
                root->left = solution(root->left)
                root->right = solution(root->right)

                // Check if the leaf node and val is the target. If so, delete.
                if (!root->left && !root->right && root->val == target) {
                    if (parent)
                        delete root
                    return null
                }
                return root
            }

        Proof of Correctness:
            It is clear that only target nodes will be deleted, though it is important to note that the post-order traversal will ensure that the nodes
            down the tree are deleted. This then allows the current node to be deleted if the conditions are met. Hence, the algorithm is correct.

        Proof of Runtime:
            Because of the fact that the tree is traversed a single time, and the checking for if a node is a target node is a constant
            time operation, we see that the runtime of our function is O(n).